version: '3.8'

services:
  # Nginx Reverse Proxy (Shared for WebApp + API)
  nginx-proxy:
    build: ./nginx
    container_name: ollo-nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./logs/nginx:/var/log/nginx
    networks:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # WebApp Service
  webapp:
    build: .
    container_name: ollo-webapp
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - API_BASE_URL=http://nginx-proxy/api
    networks:
      - frontend
    volumes:
      - ./logs/webapp:/var/log/webapp
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


  # API Service 
  api:
    image: dayandev/ollolifestyle-api:latest  # Use existing image until api/ dir ready
    container_name: ollo-api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:5000
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-default_jwt_secret}
      - Jwt__SecretKey=${JWT_SECRET_KEY:-default_jwt_secret}
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING:-default_connection}
      - DB_PASSWORD=${DB_PASSWORD:-default_password}
    networks:
      - backend
    volumes:
      - ./logs/api:/app/Logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  logs:
    driver: local